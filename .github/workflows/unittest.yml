name: Python Unittest

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-13, ubuntu-latest, macOS-14]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        numpy-version: ["2.0", "1.26"]
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up wabt
        uses: mwilliamson/setup-wabt-action@v3
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'
        with:
          wabt-version: "1.0.35"

      - name: Set up wabt on macOS
        if: matrix.os == 'macos-14' || matrix.os == 'macos-13'
        run: |
          brew install wabt

      - name: Install python dependencies
        run: |
          pip install numpy==${{ matrix.numpy-version }}

      - name: Check environment
        run: |
          wast2json --version
          python -V
          pip freeze

      - name: Run tests
        id: tests
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-13' || matrix.os == 'macos-14'
        env:
          OUTPUT_LOG: test_result_temp.log
          CI: "true"
        run: |
          python -m unittest discover -p test_*.py -s tests > $OUTPUT_LOG 2>&1 || true
          cat $OUTPUT_LOG

      - name: Run tests on Windows
        if: matrix.os == 'windows-latest'
        env:
          OUTPUT_LOG: test_result_temp.log
          CI: "true"
        run: |
          wast2json --version
          python -m unittest discover -p test_*.py -s tests > %OUTPUT_LOG% 2>&1 || true
          type %OUTPUT_LOG%
        shell: cmd

      - name: Comment on commit
        uses: actions/github-script@v7
        env:
          OUTPUT_LOG: test_result_temp.log
          ON: ${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.numpy-version }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const commit_sha = context.sha;
            const test_result = require('fs').readFileSync(process.env.OUTPUT_LOG, 'utf8');
            const line = test_result.split('\n');

            const separator = '-----';
            const separator_index = line.findLastIndex(x => x.includes(separator));
            const bottom = line.slice(separator_index + 1, separator_index + 4).join('\n');
            const message = line.slice(separator_index + 4, line.length - 1).join('\n');

            const indent = '\n';
            const log = (x) =>`${indent}\`\`\`log${indent}${x}${indent}\`\`\`${indent}`;

            const body = `Test result on ${process.env.ON}:${log(bottom)}${log(message)}`;
            github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: commit_sha,
                body: body
            });
